import plotly.graph_objs as go
import dash
from dash import dcc
from dash import html
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
import dash_bootstrap_components as dbc
import plotly.express as px
from dash.dependencies import Input, Output, State
import numpy as np
import os
import csv 
from pgmpy.models import BayesianModel
from pgmpy.sampling import BayesianModelSampling
from pgmpy.models import BayesianNetwork
from pgmpy.factors.discrete import TabularCPD
from pgmpy.estimators import MaximumLikelihoodEstimator, BayesianEstimator
from pgmpy.inference import VariableElimination
from pgmpy.models import BayesianNetwork
from pgmpy.factors.discrete import TabularCPD
from pgmpy.readwrite import BIFWriter
from pgmpy.readwrite import BIFReader
from pgmpy.models import BayesianNetwork
from pgmpy.factors.discrete import TabularCPD
from pgmpy.readwrite import XMLBIFWriter
from pgmpy.factors.discrete import TabularCPD

from pgmpy.readwrite import XMLBIFReader

#Datos normales
a="C:\\Users\\asbar\\OneDrive - Universidad de los Andes\\Carrera\\SÃ©ptimo semestre 2023-1\\ANALITICA\\P2\\processed.cleveland_repaired.csv"

data = pd.read_csv(a)
dict_df = data.to_dict('list')

#Datos modificados

#df=pd.DataFrame({'age': ['55-100', '55-100', '55-100', '0-45', '0-45', '55-100', '55-100', '55-100', '55-100', '45-55', '55-100', '55-100', '55-100', '0-45', '45-55', '55-100', '45-55', '45-55', '45-55', '45-55', '55-100', '55-100', '55-100', '55-100', '55-100', '45-55', '55-100', '55-100', '0-45', '0-45', '55-100', '55-100', '55-100', '55-100', '0-45', '0-45', '0-45', '55-100', '45-55', '55-100', '55-100', '0-45', '55-100', '55-100', '55-100', '55-100', '45-55', '45-55', '55-100', '45-55', '0-45', '55-100', '0-45', '0-45', '55-100', '45-55', '45-55', '0-45', '45-55', '45-55', '45-55', '45-55', '55-100', '45-55', '45-55', '55-100', '55-100', '45-55', '55-100', '45-55', '55-100', '55-100', '55-100', '55-100', '0-45', '55-100', '55-100', '45-55', '45-55', '55-100', '0-45', '45-55', '0-45', '55-100', '45-55', '0-45', '45-55', '45-55', '45-55', '45-55', '55-100', '55-100', '55-100', '0-45', '55-100', '45-55', '55-100', '55-100', '45-55', '45-55', '0-45', '0-45', '55-100', '55-100', '45-55', '45-55', '55-100', '55-100', '55-100', '0-45', '55-100', '55-100', '45-55', '0-45', '55-100', '0-45', '55-100', '0-45', '55-100', '55-100', '45-55', '55-100', '45-55', '45-55', '55-100', '0-45', '55-100', '45-55', '0-45', '55-100', '45-55', '45-55', '0-45', '45-55', '0-45', '45-55', '55-100', '55-100', '0-45', '45-55', '55-100', '55-100', '45-55', '55-100', '55-100', '45-55', '55-100', '0-45', '0-45', '55-100', '45-55', '0-45', '55-100', '45-55', '55-100', '55-100', '45-55', '55-100', '55-100', '55-100', '45-55', '55-100', '45-55', '55-100', '45-55', '55-100', '45-55', '45-55', '0-45', '0-45', '55-100', '45-55', '55-100', '55-100', '55-100', '55-100', '45-55', '55-100', '0-45', '45-55', '45-55', '55-100', '0-45', '55-100', '55-100', '55-100', '0-45', '55-100', '45-55', '55-100', '45-55', '45-55', '0-45', '55-100', '55-100', '55-100', '55-100', '0-45', '45-55', '55-100', '45-55', '55-100', '55-100', '55-100', '0-45', '0-45', '55-100', '45-55', '45-55', '55-100', '0-45', '0-45', '0-45', '55-100', '45-55', '55-100', '45-55', '45-55', '55-100', '55-100', '0-45', '45-55', '0-45', '45-55', '55-100', '0-45', '45-55', '55-100', '45-55', '55-100', '45-55', '45-55', '45-55', '55-100', '45-55', '45-55', '55-100', '45-55', '45-55', '0-45', '0-45', '0-45', '45-55', '55-100', '55-100', '55-100', '55-100', '45-55', '45-55', '55-100', '55-100', '55-100', '55-100', '45-55', '0-45', '0-45', '55-100', '55-100', '55-100', '55-100', '0-45', '55-100', '55-100', '0-45', '55-100', '0-45', '45-55', '55-100', '0-45', '0-45', '55-100', '55-100', '45-55', '55-100', '55-100', '55-100', '55-100', '0-45', '55-100', '55-100', '55-100', '45-55', '45-55', '0-45', '55-100', '55-100', '55-100', '55-100', '55-100', '55-100', '55-100', '45-55', '0-45', '55-100', '55-100', '0-45', '55-100', '55-100', '0-45', '55-100', '55-100', '55-100', '0-45'], 
 #               'sex
  #              'cp': ['1.0', '4.0', '4.0', '3.0', '2.0', '2.0', '4.0', '4.0', '4.0', '4.0', '4.0', '2.0', '3.0', '2.0', '3.0', '3.0', '2.0', '4.0', '3.0', '2.0', '1.0', '1.0', '2.0', '3.0', '4.0', '3.0', '3.0', '1.0', '4.0', '4.0', '1.0', '4.0', '3.0', '4.0', '3.0', '4.0', '4.0', '4.0', '4.0', '3.0', '4.0', '1.0', '2.0', '3.0', '4.0', '3.0', '3.0', '4.0', '3.0', '3.0', '2.0', '4.0', '4.0', '2.0', '4.0', '4.0', '3.0', '4.0', '3.0', '1.0', '4.0', '3.0', '4.0', '3.0', '4.0', '4.0', '3.0', '3.0', '4.0', '3.0', '3.0', '4.0', '4.0', '4.0', '4.0', '3.0', '4.0', '3.0', '2.0', '4.0', '4.0', '4.0', '3.0', '3.0', '2.0', '3.0', '3.0', '3.0', '4.0', '3.0', '4.0', '4.0', '3.0', '3.0', '3.0', '4.0', '4.0', '4.0', '2.0', '4.0', '4.0', '1.0', '4.0', '3.0', '3.0', '2.0', '4.0', '3.0', '4.0', '4.0', '4.0', '4.0', '1.0', '4.0', '3.0', '2.0', '3.0', '4.0', '4.0', '4.0', '4.0', '4.0', '3.0', '4.0', '1.0', '2.0', '4.0', '4.0', '2.0', '4.0', '3.0', '3.0', '2.0', '4.0', '3.0', '2.0', '4.0', '2.0', '4.0', '3.0', '2.0', '1.0', '2.0', '3.0', '3.0', '3.0', '4.0', '3.0', '2.0', '3.0', '1.0', '4.0', '3.0', '4.0', '4.0', '4.0', '4.0', '4.0', '4.0', '3.0', '2.0', '4.0', '3.0', '4.0', '3.0', '4.0', '3.0', '2.0', '4.0', '2.0', '3.0', '4.0', '4.0', '4.0', '4.0', '4.0', '4.0', '4.0', '3.0', '3.0', '4.0', '4.0', '1.0', '1.0', '4.0', '2.0', '3.0', '2.0', '2.0', '3.0', '3.0', '4.0', '4.0', '4.0', '3.0', '4.0', '1.0', '4.0', '2.0', '1.0', '4.0', '4.0', '3.0', '3.0', '4.0', '4.0', '4.0', '4.0', '2.0', '4.0', '3.0', '1.0', '3.0', '4.0', '4.0', '1.0', '2.0', '4.0', '4.0', '4.0', '3.0', '3.0', '3.0', '4.0', '4.0', '2.0', '4.0', '3.0', '4.0', '4.0', '3.0', '4.0', '3.0', '2.0', '3.0', '4.0', '4.0', '4.0', '2.0', '2.0', '2.0', '2.0', '4.0', '1.0', '3.0', '4.0', '4.0', '4.0', '4.0', '2.0', '4.0', '4.0', '4.0', '3.0', '4.0', '3.0', '4.0', '3.0', '2.0', '2.0', '3.0', '2.0', '1.0', '3.0', '4.0', '4.0', '4.0', '3.0', '4.0', '3.0', '4.0', '4.0', '4.0', '4.0', '1.0', '1.0', '3.0', '3.0', '2.0', '4.0', '4.0', '3.0', '4.0', '2.0', '4.0', '4.0', '4.0', '2.0', '2.0', '2.0', '3.0', '2.0', '4.0', '4.0', '4.0', '2.0', '4.0', '4.0', '1.0', '4.0', '4.0', '2.0', '3.0'], 
   #             'trestbps': ['140-300', '140-300', '0-120', '120-140', '120-140', '0-120', '120-140', '0-120', '120-140', '120-140', '120-140', '120-140', '120-140', '0-120', '140-300', '140-300', '0-120', '120-140', '120-140', '120-140', '0-120', '140-300', '0-120', '120-140', '120-140', '0-120', '0-120', '140-300', '140-300', '0-120', '120-140', '0-120', '120-140', '120-140', '120-140', '120-140', '0-120', '140-300', '120-140', '140-300', '140-300', '120-140', '140-300', '140-300', '120-140', '0-120', '0-120', '140-300', '120-140', '120-140', '0-120', '0-120', '0-120', '120-140', '120-140', '120-140', '120-140', '0-120', '120-140', '120-140', '120-140', '140-300', '120-140', '120-140', '0-120', '140-300', '120-140', '140-300', '140-300', '140-300', '140-300', '120-140', '0-120', '0-120', '0-120', '140-300', '120-140', '120-140', '120-140', '140-300', '0-120', '120-140', '120-140', '140-300', '0-120', '120-140', '120-140', '120-140', '120-140', '120-140', '0-120', '140-300', '120-140', '0-120', '120-140', '120-140', '0-120', '140-300', '120-140', '120-140', '0-120', '0-120', '120-140', '0-120', '0-120', '0-120', '120-140', '120-140', '0-120', '0-120', '140-300', '120-140', '0-120', '120-140', '120-140', '120-140', '120-140', '120-140', '120-140', '120-140', '120-140', '140-300', '0-120', '120-140', '120-140', '120-140', '140-300', '0-120', '0-120', '120-140', '0-120', '0-120', '120-140', '120-140', '120-140', '120-140', '140-300', '0-120', '0-120', '120-140', '120-140', '140-300', '120-140', '120-140', '0-120', '0-120', '140-300', '0-120', '120-140', '0-120', '140-300', '0-120', '0-120', '140-300', '0-120', '120-140', '120-140', '120-140', '120-140', '0-120', '0-120', '120-140', '0-120', '0-120', '120-140', '120-140', '120-140', '120-140', '120-140', '0-120', '140-300', '140-300', '140-300', '120-140', '140-300', '140-300', '0-120', '120-140', '120-140', '120-140', '120-140', '120-140', '140-300', '140-300', '140-300', '120-140', '0-120', '140-300', '140-300', '120-140', '120-140', '120-140', '120-140', '120-140', '0-120', '0-120', '140-300', '120-140', '0-120', '140-300', '0-120', '140-300', '140-300', '120-140', '0-120', '140-300', '120-140', '140-300', '120-140', '140-300', '0-120', '0-120', '120-140', '140-300', '0-120', '0-120', '0-120', '120-140', '120-140', '120-140', '0-120', '0-120', '0-120', '120-140', '0-120', '0-120', '0-120', '140-300', '0-120', '0-120', '120-140', '140-300', '0-120', '0-120', '140-300', '120-140', '120-140', '0-120', '120-140', '0-120', '0-120', '120-140', '120-140', '120-140', '0-120', '0-120', '0-120', '0-120', '120-140', '120-140', '0-120', '140-300', '120-140', '0-120', '0-120', '0-120', '0-120', '120-140', '140-300', '120-140', '0-120', '120-140', '140-300', '0-120', '120-140', '120-140', '120-140', '120-140', '140-300', '120-140', '120-140', '140-300', '120-140', '0-120', '120-140', '140-300', '140-300', '120-140', '140-300', '120-140', '0-120', '120-140', '120-140', '120-140', '140-300', '0-120', '140-300', '120-140', '120-140', '0-120', '140-300', '120-140', '0-120', '120-140', '120-140', '0-120', '140-300', '120-140', '0-120', '140-300', '120-140', '120-140', '120-140'], 
    #            'chol': ['0-240', '260-400', '0-240', '240-260', '0-240', '0-240', '260-400', '260-400', '240-260', '0-240', '0-240', '260-400', '240-260', '260-400', '0-240', '0-240', '0-240', '0-240', '260-400', '260-400', '0-240', '260-400', '260-400', '0-240', '0-240', '0-240', '260-400', '0-240', '240-260', '0-240', '0-240', '0-240', '260-400', '0-240', '0-240', '0-240', '0-240', '260-400', '260-400', '240-260', '0-240', '0-240', '260-400', '0-240', '260-400', '0-240', '0-240', '240-260', '', '0-240', '0-240', '0-240', '260-400', '0-240', '240-260', '260-400', '0-240', '0-240', '260-400', '0-240', '260-400', '0-240', '0-240', '260-400', '0-240', '260-400', '0-240', '0-240', '260-400', '0-240', '260-400', '240-260', '260-400', '240-260', '0-240', '260-400', '240-260', '260-400', '240-260', '260-400', '0-240', '260-400', '260-400', '260-400', '260-400', '0-240', '240-260', '0-240', '0-240', '240-260', '260-400', '0-240', '0-240', '0-240', '240-260', '240-260', '0-240', '240-260', '0-240', '0-240', '240-260', '0-240', '260-400', '260-400', '0-240', '260-400', '0-240', '0-240', '240-260', '0-240', '260-400', '240-260', '0-240', '260-400', '260-400', '0-240', '0-240', '0-240', '260-400', '240-260', '240-260', '', '0-240', '0-240', '260-400', '0-240', '260-400', '0-240', '0-240', '0-240', '240-260', '0-240', '0-240', '260-400', '0-240', '240-260', '0-240', '260-400', '0-240', '240-260', '0-240', '260-400', '0-240', '260-400', '0-240', '240-260', '260-400', '240-260', '260-400', '260-400', '260-400', '260-400', '', '260-400', '240-260', '260-400', '260-400', '260-400', '260-400', '260-400', '0-240', '260-400', '0-240', '240-260', '240-260', '0-240', '0-240', '260-400', '260-400', '0-240', '260-400', '0-240', '240-260', '260-400', '0-240', '260-400', '0-240', '0-240', '260-400', '240-260', '260-400', '', '240-260', '260-400', '260-400', '0-240', '0-240', '240-260', '260-400', '240-260', '0-240', '260-400', '240-260', '260-400', '0-240', '260-400', '0-240', '0-240', '240-260', '260-400', '240-260', '260-400', '0-240', '260-400', '0-240', '260-400', '240-260', '0-240', '260-400', '240-260', '0-240', '0-240', '0-240', '0-240', '0-240', '0-240', '0-240', '240-260', '260-400', '260-400', '260-400', '260-400', '0-240', '260-400', '260-400', '0-240', '0-240', '260-400', '0-240', '0-240', '0-240', '260-400', '0-240', '260-400', '0-240', '260-400', '260-400', '240-260', '260-400', '260-400', '0-240', '260-400', '260-400', '0-240', '0-240', '0-240', '0-240', '260-400', '0-240', '0-240', '0-240', '0-240', '260-400', '260-400', '260-400', '0-240', '0-240', '0-240', '240-260', '260-400', '240-260', '260-400', '0-240', '0-240', '0-240', '260-400', '0-240', '0-240', '0-240', '0-240', '0-240', '0-240', '260-400', '0-240', '0-240', '0-240', '260-400', '0-240', '0-240', '0-240', '260-400', '240-260', '0-240', '0-240', '0-240', '260-400', '0-240', '0-240', '0-240', '0-240', '0-240', '260-400', '0-240', '0-240', '0-240', '0-240', '0-240', '240-260', '260-400', '0-240', '0-240', '0-240', '0-240'],
     #           'fbs
      #          'thalach': ['150.0', '108.0', '129.0', '187.0', '172.0', '178.0', '160.0', '163.0', '147.0', '155.0', '148.0', '153.0', '142.0', '173.0', '162.0', '174.0', '168.0', '160.0', '139.0', '171.0', '144.0', '162.0', '160.0', '173.0', '132.0', '158.0', '172.0', '114.0', '171.0', '114.0', '151.0', '160.0', '158.0', '161.0', '179.0', '178.0', '120.0', '112.0', '132.0', '137.0', '114.0', '178.0', '162.0', '157.0', '169.0', '165.0', '123.0', '128.0', '157.0', '152.0', '168.0', '140.0', '153.0', '188.0', '144.0', '109.0', '163.0', '158.0', '152.0', '125.0', '142.0', '160.0', '131.0', '170.0', '113.0', '142.0', '155.0', '165.0', '140.0', '147.0', '148.0', '163.0', '99.0', '158.0', '177.0', '151.0', '141.0', '142.0', '180.0', '111.0', '148.0', '143.0', '182.0', '150.0', '172.0', '180.0', '156.0', '115.0', '160.0', '149.0', '151.0', '145.0', '146.0', '175.0', '172.0', '161.0', '142.0', '157.0', '158.0', '186.0', '185.0', '174.0', '159.0', '130.0', '139.0', '156.0', '162.0', '150.0', '140.0', '140.0', '146.0', '144.0', '190.0', '136.0', '97.0', '132.0', '165.0', '182.0', '132.0', '127.0', '150.0', '154.0', '143.0', '111.0', '174.0', '175.0', '133.0', '126.0', '170.0', '163.0', '147.0', '154.0', '202.0', '186.0', '165.0', '161.0', '125.0', '103.0', '130.0', '166.0', '164.0', '159.0', '184.0', '131.0', '154.0', '152.0', '124.0', '179.0', '170.0', '160.0', '178.0', '122.0', '160.0', '145.0', '96.0', '109.0', '173.0', '171.0', '170.0', '151.0', '156.0', '162.0', '158.0', '122.0', '175.0', '168.0', '169.0', '159.0', '156.0', '138.0', '112.0', '111.0', '143.0', '157.0', '132.0', '88.0', '147.0', '105.0', '162.0', '173.0', '166.0', '150.0', '178.0', '145.0', '161.0', '179.0', '194.0', '120.0', '195.0', '146.0', '163.0', '122.0', '143.0', '106.0', '115.0', '125.0', '131.0', '152.0', '162.0', '125.0', '159.0', '154.0', '173.0', '133.0', '161.0', '147.0', '130.0', '126.0', '155.0', '154.0', '170.0', '182.0', '168.0', '165.0', '160.0', '162.0', '172.0', '152.0', '122.0', '182.0', '172.0', '167.0', '179.0', '95.0', '169.0', '192.0', '143.0', '172.0', '108.0', '132.0', '169.0', '117.0', '126.0', '121.0', '163.0', '116.0', '103.0', '144.0', '162.0', '162.0', '153.0', '163.0', '163.0', '145.0', '96.0', '71.0', '156.0', '118.0', '168.0', '140.0', '126.0', '105.0', '105.0', '157.0', '181.0', '173.0', '142.0', '116.0', '143.0', '141.0', '149.0', '152.0', '171.0', '169.0', '125.0', '125.0', '156.0', '134.0', '181.0', '150.0', '138.0', '138.0', '120.0', '125.0', '162.0', '155.0', '152.0', '152.0', '164.0', '131.0', '143.0', '179.0', '130.0', '174.0', '161.0', '140.0', '146.0', '144.0', '163.0', '169.0', '150.0', '166.0', '144.0', '144.0', '136.0', '182.0', '90.0', '123.0', '132.0', '141.0', '115.0', '174.0', '173.0'], 
       #         'exang
        #        'num
         #       'anom_thalach})

b="C:\\Users\\asbar\\OneDrive - Universidad de los Andes\\Carrera\\SÃ©ptimo semestre 2023-1\\ANALITICA\\P2\\heart_disease_modified2.csv"
df = pd.read_csv(b)

df['sex'] = df['sex'].astype(float)
df['cp'] = df['cp'].astype(float)
df['fbs'] = df['fbs'].astype(float)
df['thalach'] = df['thalach'].astype(float)
df['exang'] = df['exang'].astype(float)
df['num'] = df['num'].astype(float)
df['anom_thalach'] = df['anom_thalach'].astype(float)


model = BayesianNetwork([('age','chol'),('age','fbs'),('sex','chol'),('sex','fbs')
                      ,('chol','num'),('fbs','num')
                      , ('num','cp'), ('num','exang'), ('num','anom_thalach'), ('num','trestbps')])



model.fit(df, estimator=MaximumLikelihoodEstimator)
#serializar
writer = BIFWriter(model)
writer.write_bif(filename='C:\\Users\\asbar\\OneDrive - Universidad de los Andes\\Carrera\\SÃ©ptimo semestre 2023-1\\ANALITICA\\P2\\proyectofinal.bif')

#deserializar
reader = BIFReader("C:\\Users\\asbar\\OneDrive - Universidad de los Andes\\Carrera\\SÃ©ptimo semestre 2023-1\\ANALITICA\\P2\\proyectofinal.bif")
modelo = reader.get_model()


# Crea la aplicaciÃ³n--------------------------------------------------------------------------------------------------------------------------------------------------------------
app = dash.Dash(__name__, external_stylesheets=[dbc.themes.MATERIA])
image_url = "https://uniandes.edu.co/sites/default/files/logo-uniandes.png"
creador="https://img.freepik.com/vector-premium/icono-perfil-avatar_188544-4755.jpg?w=2000"

# Define el layout
app.layout = html.Div([
    dcc.Location(id='url', refresh=False),
    html.Div([
        html.Img(src=image_url, style={'position': 'absolute', 'bottom': 0, 'left': '0px','height': '78px'}),
        dcc.Link('Inicio â', href='/',
                 style={'display': 'block','color': '#566573'}),
        dcc.Link('Probabilidad â', href='/servicio-1',
                 style={'display': 'block','color': '#566573'}),
        dcc.Link('CorazÃ³n sano â¤', href='/servicio-2',
                 style={'display': 'block','color': '#566573'}),
        dcc.Link('Creadores', href='/servicio-3',
                 style={'display': 'block','color': '#566573'}),
    ], className='menu', 
    style={
        'position': 'fixed',
        'left': 0,
        'top': 0,
        'bottom': 0,
        'width': '140px',
        'padding': '10px',
        'background-color': '#f8f8f8',
        'border-right': '1px solid #ddd'
    }
    ),
    
    # Define el contenido principal
    html.Div(id='contenido')
])

# Paginas principal-----------------------------------------------------------------------------------------------------------------------------
#Graficos
# histograma

# Calcular la mediana del colesterol
chol_median = np.median(dict_df['chol'])

# Crear el histograma
histograma = dcc.Graph(
    id='histograma',
    figure={
        'data': [{
            'x': dict_df['chol'],
            'type': 'histogram'
        }],
        'layout': {
            'title': 'DistribuciÃ³n del colesterol',
            'xaxis': {'title': 'Colesterol mg/dl'},
            'yaxis': {'title': 'Frecuencia'}
        }
    }
)

# GrÃ¡fico de dispersiÃ³n
corr_coef = np.corrcoef(dict_df['age'], dict_df['thalach'])[0, 1]

dispersion = dcc.Graph(
    id='dispersion',
    figure={
        'data': [{
            'x': dict_df['age'],
            'y': dict_df['thalach'],
            'mode': 'markers'
        }],
        'layout': {
            'title': 'Frecuencia cardiaca dado la edad',
            'xaxis': {'title': 'Edad'},
            'yaxis': {'title': 'Frecuencia cardiaca'},
            'annotations': [{
                'x': 0.95,
                'y': 0.95,
                'showarrow': False,
                'text': 'Coeficiente de correlaciÃ³n: {:.2f}'.format(corr_coef),
                'xref': 'paper',
                'yref': 'paper',
                'align': 'right',
                'font': {
                    'size': 10
                }
            }]
        }
    }
)
#Grafico de torta
fbs= data['fbs'].tolist()
cuenta = [fbs.count(0), fbs.count(1)]
labels = ['fbs < 120 mg/dl', 'fbs > 120 mg/dl']
colors = ['#3498DB', '#AED6F1 ']
trace = go.Pie(labels=labels, values=cuenta, marker=dict(colors=colors))
fig = go.Figure(data=[trace])
grafico_torta = dcc.Graph(
    id='mi_grafico',
    figure={
        'data': [trace],
        'layout': {
            'title': 'Personas con un fbs superior a 120 mg/dl ',
            'height': 400,
            'showlegend': True,
            'legend': {'x': 1, 'y': 0.5},
            
        },
    }
)

#Layout

home = html.Div([
    html.H1('Â¡Bienvenido/a a nuestra pÃ¡gina de prevenciÃ³n de enfermedades cardiovasculares!', style={'backgroundColor': '#34495e', 'color': 'white','padding': '20px'}),
    html.Div([
        html.P('Nos complace que haya decidido visitar nuestro sitio web para obtener informaciÃ³n y consejos sobre cÃ³mo prevenir enfermedades cardiovasculares y mantener su corazÃ³n sano.Sabemos que la salud del corazÃ³n es esencial para llevar una vida plena y activa, y estamos comprometidos a brindarle toda la informaciÃ³n necesaria para ayudarlo/a a lograrlo.')
    ]),
    html.H4('Algunos grÃ¡ficos que le pueden interesar'),
    # Columna izquierda
    dbc.Row([
        dbc.Col(histograma, width={'size': 4}),
        dbc.Col(dispersion, width={'size': 4}),
        dbc.Col(grafico_torta, width={'size': 4})
    ]),
    html.Div([
        html.P('Estos datos corresponden a una muestra de 606 pacientes proporcionada por la Universidad de California y estÃ¡n relacionados con enfermedades cardiovasculares'),
    ]),
    
    html.Div([
        html.H5('En nuestra pÃ¡gina puede a partir de unos datos calcular la probabilidad de tener una enfermedad cardiovascular o ver buenos hÃ¡bitos para poder prevenir las enfermedades cardiovasculares'),
    ])

],style={'marginLeft': '132px', 'padding': '20px'})

# Pagina probabilidad------------------------------------------------------------------------------------------------------------------------------------

options_sexo= [
    {'label': 'Hombre', 'value': 'Hombre'},
    {'label': 'Mujer', 'value': 'Mujer'},
    ]

options_col=[
    {'label':'0-240','value':'0-240'},
    {'label':'240-260','value':'240-260'},
    {'label':'260-400','value':'260-400'}
    ]


servicio_1 = html.Div([
    html.H1('Probabilidad de tener una enfermedad cardiovascular', style={'backgroundColor': '#34495e', 'color': 'white','padding': '20px'}),
    html.Div([
            html.P('Para calcular la probabilidad necesitamos que tenga disponible la siguiente informaciÃ³n:')
            ]),
            html.Div([
            html.P("1: Un examen que muestre su nivel actual de colesterol mg/dl")
            ]),
            html.Div([
            html.P("2: Un examen que muestre su nivel actual de glucemia en ayunas (o fasting blood sugar) mg/dl")
            ]),
            html.Div([
            html.P("3: Un examen que muestre su frecuencia cardiaca en reposo (se puede medir tomando el pulso en la muÃ±eca o el cuello durante un perÃ­odo de tiempo determinado, generalmente de 30 segundos a un minuto. El resultado se multiplica luego por dos para obtener la frecuencia cardÃ­aca en reposo) ")
            ]),
            
         html.Div([
         html.H5('Seleccione su sexo.')]),
           dcc.Dropdown(
            id='dropdown',
            options=options_sexo,
            value='Hombre',
            style={'display': 'inline-block', 'width': '300px'}
           ),
           html.Div(id='output'),
           html.Br(),
           html.H5("Â¿QuÃ© edad tiene?"),
           html.Div(["Edad: ",
              dcc.Input(id='my-input', 
                        value='0', 
                        type='text',
                        style={
                      'display': 'inline-block', 
                      'width': '300px', 
                      'border': '1px solid gray'
                  })]),

             html.Div(id='output'),
             html.Br(),
    html.Div([
      html.H5('Seleccione su nivel de colesterol mg/dl.')]),
    dcc.Dropdown(
        id='dropdown_col',
        options=options_col,
        value='',
        style={'display': 'inline-block', 'width': '300px'}
        ) ,
        
    html.Div(id='output'),
    html.Br(),
    html.H5("Escriba su nivel de glucemia en ayunas mg/dl"),
    html.Div(["Fbs: ",
              dcc.Input
              (id='input-fbs', value='0', type='text',
               style={
                      'display': 'inline-block', 
                      'width': '300px', 
                      'border': '1px solid gray'
                  })])  ,
    html.Br(),
    html.Div(id='output'),
    html.H5("Escriba su frecuencia cardiaca"),
    html.Div(["Frecuencia cardiaca: ",
              dcc.Input
              (id='input-car', value='0', type='text',
               style={
                      'display': 'inline-block', 
                      'width': '300px', 
                      'border': '1px solid gray'
                  })]),
    html.Br(),
    html.Button('Enviar', id='button', style={'color': '#273746','background-color': '#D4E6F1'}),
        html.Br(),
        html.Div(id='output'
                  )   


],
style={'marginLeft': '132px', 'padding': '20px'})

#PÃ¡gina de buenos hÃ¡bitos-----------------------------------------------------------------------------------------------------------------------------------------
servicio_2 = html.Div([
    html.H1('Buenos hÃ¡bitos para el corazÃ³n', style={'backgroundColor': '#34495e', 'color': 'white','padding': '20px'}),
    html.P('No hay que tomarse una enfermedad cardiovascular a la ligera, por eso aca le damos algunas recomendaciones para evitarlas y mantener su corazÃ³n sano.'),
    html.Div([
        html.P("1. Mantener una dieta saludable: Una dieta equilibrada y saludable puede ayudar a reducir el riesgo de enfermedades cardiovasculares. Se recomienda una dieta rica en frutas, verduras, cereales integrales, proteÃ­nas magras y grasas saludables.")
    ]),
html.Div([
html.P("2. Mantenerse activo: El ejercicio regular es una excelente manera de mantener un corazÃ³n saludable. Se recomienda al menos 30 minutos de actividad fÃ­sica moderada la mayorÃ­a de los dÃ­as de la semana")
    ]),
html.Div([
html.P("3. No fumar: Fumar es un factor de riesgo importante para las enfermedades cardiovasculares. Dejar de fumar puede reducir significativamente este riesgo")
    ])
], style={'marginLeft': '150px', 'padding': '20px'})

#PÃ¡gina de creadores-----------------------------------------------------------------------------------------------------------------------------------------------

image_url = "https://img.freepik.com/vector-premium/icono-perfil-avatar_188544-4755.jpg?w=2000"

description_1 = html.Ul([
    html.Li("Adriana Sofia Barrera"),
    html.Li("202011470")
])


description_2 = html.Ul([
    html.Li("Juan JosÃ© FlÃ³rez"),
    html.Li("202011038")
])


description_3 = html.Ul([
    html.Li("Juan SebastiÃ¡n HernÃ¡ndez"),
    html.Li("201715595")
])

image_list = html.Div([
    html.Div([
        html.Img(src=image_url, height="145px"),
        html.Div(description_1, style={"display": "inline-block", "vertical-align": "top",'fontSize': 20})
    ], style={'display': 'flex', 'flex-direction': 'row'}),
    
    html.Div([
        html.Img(src=image_url, height="145px"),
        html.Div(description_2, style={"display": "inline-block", "vertical-align": "top",'fontSize': 20})
    ], style={'display': 'flex', 'flex-direction': 'row'}),
    
    html.Div([
        html.Img(src=image_url, height="145px"),
        html.Div(description_3, style={"display": "inline-block", "vertical-align": "top",'fontSize': 20})
    ], style={'display': 'flex', 'flex-direction': 'row'})
])


servicio_3 = html.Div([
    html.H1('Creadores',style={'backgroundColor': '#34495e', 'color': 'white','padding': '20px'}),
    image_list
], style={'marginLeft': '150px', 'padding': '20px'})



# Define el callback para cambiar el contenido del Div de contenido-------------------------------------------------------------------------------------------------
@app.callback(
    Output('contenido', 'children'),
    Input('url', 'pathname')
)
def cambiar_contenido(pathname):
    if pathname == '/':
        return home
        
    elif pathname == '/servicio-1':
        return servicio_1
    
    elif pathname == '/servicio-2':
        return servicio_2
    
    elif pathname == '/servicio-3':
        return servicio_3
    
    else:
        return home

# Calculo de probabilidad---------------------------------------------------------------------------------------------------------------------------------------------------------
sexo=""
edad=""
col =""
fbs=""
proba=0
anom_thalach=0
cp=""
recomendacion=""
@app.callback(
    Output('output', 'children'),
    Input('url', 'pathname'),
    [dash.dependencies.Input('button', 'n_clicks')],
    [dash.dependencies.State('dropdown', 'value')],
    [dash.dependencies.State('my-input', 'value')],
    [dash.dependencies.State('dropdown_col', 'value')],
    [dash.dependencies.State('input-fbs', 'value')],
    [dash.dependencies.State('input-car', 'value')]
)


def update_output(pathname, n_clicks, dropdow_value,input_value,dropdown_col,input_fbs,input_car):
    if pathname== '/servicio-1':
        if n_clicks:
            global sexo
            sexo = dropdow_value
            if sexo=="Hombre":
                sexo=1
            else:
                sexo=0
                
            global edad
            edad= input_value
            if int(edad)<=44:
                edad="0-45"
            elif int(edad)<=54:
                edad="45-55"
            else:
                edad='55-100'
            global col
            col= dropdown_col
            global fbs
            fbs= input_fbs
            if int(fbs)>120:
                fbs=1
            else:
                fbs=0
            
            global anom_thalach
            anom_thalach=input_car
            if int(anom_thalach)>(220-int(input_value)):
                anom_thalach=1
            else:
                anom_thalach=0
            
            global proba
            global recomendacion
            infer = VariableElimination(model)
            P1 = infer.query(['num'], evidence={'age': edad,'sex':sexo, 'chol':col,'fbs':fbs,"anom_thalach":anom_thalach})
            proba= P1.values

            if proba[0]>0.3:
                recomendacion="Tienes una probabilidad alta, deberias ir al mÃ©dico para revisar cÃ³mo esta tu corazÃ³n."
            else:
                recomendacion="Tienes una probabilidad baja, lo que significa que tu corazÃ³n esta sano."

            return html.Div([
                html.H4("Tu probabilidad de tener una enfermedad cardiovascular es de :" +str(round(proba[0]*100,1))+ "%"),
                html.P(recomendacion)
                             ])
        
        else:
            return ''
    
    return dash.no_update




# Ejecuta la aplicaciÃ³n
if __name__ == '__main__':
    app.run_server(debug=True)